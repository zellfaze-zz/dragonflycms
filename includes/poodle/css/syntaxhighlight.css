code[data-type],
.syntaxhighlight {
	border: 1px solid #999;
	padding: 0.25em;
}
pre > code[data-type],
pre > .syntaxhighlight {
	display: block;
	max-width: 90%; /*max-height: 30em; */
	overflow: auto;
	-moz-tab-size: 4;
	-o-tab-size:   4;
	tab-size:      4;
	white-space: pre;
}
.syntaxhighlight .tag       { color: #00D; }
.syntaxhighlight .keyword   { color: #00D; } /* function, return, var, for, if, else, parent, self, class, static, public, private, protected, trait, const */
.syntaxhighlight .literal   { color: #070; } /* true, false, null, undefined */
.syntaxhighlight .attribute { color: #700; } /* or variable */
.syntaxhighlight .string    { color: #C60; }
.syntaxhighlight .number    { color: #070; } /* 0, 0x00, 0.0, 1.0e+3 */
.syntaxhighlight .comment   { color: #888; }
.syntaxhighlight var        { color: #066; font-style: normal; }
.syntaxhighlight ins        { background-color: #DFD; text-decoration: none; display: inline-block; min-width: 100% }
.syntaxhighlight del        { background-color: #FDD; text-decoration: none; display: inline-block; min-width: 100% }

code.lines[data-type],
.syntaxhighlight.lines {
	counter-reset: line;
	padding-left: 2.5em;
}
.syntaxhighlight.lines .line::before {
	border-right: 1px solid #ddd;
	color: #888;
	content: counter(line, decimal);
	counter-increment: line 1;
	display: inline-block;
	margin: 0 0 0 -2.5em;
	max-width: 2em;
	padding: 0 0.2em 0 0;
	text-align: right;
	width: 2em;
}
